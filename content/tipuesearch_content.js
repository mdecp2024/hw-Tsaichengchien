var tipuesearch = {"pages": [{'title': 'About', 'text': '國立虎尾科技大學機械設計工程系 \n National Formosa University \n Department of Mechanical Design Engineering \n cp2024 計算機程式 \n 課程教材: \n Learn Python with Jupyter  ( site ,  ebook ) \n 教育版帳號\xa0microsoftonline 登入點:\xa0 https://login.microsoftonline.com/ \n Teams 線上教學: \n 以 "學號@nfu.edu.tw" 登入  https://login.microsoftonline.com/  Office 365 \n Teams 團隊代碼:  ldodwua \n 個人倉儲: https://github.com/mdecp2024/hw-Tsaichengchien \n 個人網站: https://mdecp2024.github.io/hw-Tsaichengchien/ \n 其他資訊: \n cd2023_pj3ag4_zmq_football_4.7.7z \n cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z \n n=11 #總共的行數\nspace = \'_\'\ncenter = n//2\n#print(center)\n\nfor y in range(n):\n    for x in range(n):\n        print("(", x, ", ", y, ")", sep="")\n \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'Attendance', 'text': '出席 (10%) - 自行舉證評分 \n 自行利用 Github commits 提交記錄評分. \n', 'tags': '', 'url': 'Attendance.html'}, {'title': 'HW 1', 'text': '主題: 基於瀏覽器的分散式版次管理與整合程式開發環境 (10%) \n USB 隨身碟: \n 下載  python_2025_lite.7z  (428 MB, 解開壓縮後約 1.5 GB) \n Jupyter \n What are Github and Codespaces? \n Hello World - GitHub Docs \n 利用包含學號的字串作為帳號, 申請免費使用 Github. \n Python 課程教材:  https://www.learnpythonwithjupyter.com/  - PART 1 \n \n PART 1: Creating the basics 資料整理 (10%) \n 啟動可攜程式系統後, 在命令列中: \n y:\\>cd notebook \n y:\\notebook>jupyter lab --collaborative \n 進入  01_string_input_print.ipynb  練習如何修改 PART1 notebook 後存檔, 上傳至作業倉儲中的 downloads 目錄後, 透過  https://nbviewer.org/  將已經提交的  01_string_input_print.ipynb , 嵌入下列網頁中. \n \n 上列 iframe 標註的 html 語法: \n <iframe width="600" height="400" src="https://nbviewer.org/urls/mde.tw/cp2024_hw/downloads/01_string_input_print.ipynb"></iframe> \n 完成上述流程整理後, 請將 HW1 自評分數輸入 cp2024 自評表單中. \n', 'tags': '', 'url': 'HW 1.html'}, {'title': 'HW 1 Exam', 'text': '每六人為一組進行協同程式練習 \n 透過 Jupyterlab 協同網頁, 輪流指定各組編寫 Topic 1 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯. \n \n', 'tags': '', 'url': 'HW 1 Exam.html'}, {'title': 'w7-1', 'text': 'brython 建立 \n \n', 'tags': '', 'url': 'w7-1.html'}, {'title': 'HW 2', 'text': '主題: Python 的數列、判斷式與重複迴圈 (20%) \n Python 課程教材:  https://www.learnpythonwithjupyter.com/  - PART 2 and Part 3 \n \n 延續 HW 1 網頁資料整理與程式練習方法, 整理下列內容 (20%): \n PART 2: Introduction to lists and if/else statements \n PART 3: Introduction to the for loop \n 完成上述流程整理後, 請將 HW2 自評分數輸入 cp2024 自評表單中. \n', 'tags': '', 'url': 'HW 2.html'}, {'title': 'HW 2 Exam', 'text': '每六人為一組進行協同程式練習 \n 透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 2 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯. \n', 'tags': '', 'url': 'HW 2 Exam.html'}, {'title': 'HW 3', 'text': '主題: Python 的數字、演算法與迴圈 (20%) \n Python 課程教材:  https://www.learnpythonwithjupyter.com/  - PART 4 and Part 5 \n 完成上述流程整理後, 請將 HW3 自評分數輸入 cp2024 自評表單中. \n', 'tags': '', 'url': 'HW 3.html'}, {'title': 'HW 3 Exam', 'text': '每六人為一組進行協同程式練習 \n 透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 3 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯. \n', 'tags': '', 'url': 'HW 3 Exam.html'}, {'title': 'w13', 'text': '沒包圓的圖形 \n from browser import html\nfrom browser import document as doc\n\n# 利用 html 建立 canvas 超文件物件\ncanvas = html.CANVAS(width = 400,height = 400)\nbrython_div = doc["brython_div1"]\nbrython_div <= canvas\n\n# 每一格的 pixel 數\ngs = 200\n\n# gs*tc = canvas width and height\n\nctx = canvas.getContext("2d")\n\nwidth=1\nheight=1\n\nfor i in range(width): \n    for j in range(height):\n     #dRect(i*gs, j*gs, gs, gs, 1, "lightgrey")\n     ctx.lineWidth=1\n     ctx.strokeStyle=\'red\'\n     ctx.beginPath();\n     ctx.rect(i*gs,j*gs,gs,gs)\n     ctx.stroke();\n     \nfor i in range(width): \n    for j in range(height):\n     #dRect(i*gs, j*gs, gs, gs, 1, "lightgrey")\n     ctx.lineWidth=1\n     ctx.strokeStyle=\'red\'\n     ctx.beginPath();\n     ctx.rect(i*gs+50,j*gs+50,gs,gs)\n     ctx.stroke(); \n 外切圓的圖形 \n from browser import html, document as doc, window\n \n# Create canvas element\ncanvas = html.CANVAS(width=500, height=500)  # Increase canvas size to ensure circles are fully visible\nbrython_div = doc["brython_div1"]\nbrython_div <= canvas\n \n# Get the drawing context of the canvas\nctx = canvas.getContext("2d")\n \n# Draw the first empty square at (0, 0)\nwidth = 10\nheight = 10\ngs = 20  # Grid size (for spacing)\n \nctx.lineWidth = 2\nctx.strokeStyle = \'red\'  # Color for the first square\nctx.beginPath()\nctx.rect(50, 50, width * gs, height * gs)  # Draw a hollow square with offset (50, 50)\nctx.stroke()\n \n# Draw a blue diagonal line inside the first square\nctx.strokeStyle = \'blue\'  # Set line color to blue\nctx.beginPath()\nctx.moveTo(50, 50)  # Starting point: top-left corner of the square\nctx.lineTo(50 + width * gs, 50 + height * gs)  # Ending point: bottom-right corner of the square\nctx.stroke()\n \n# Draw the second empty square at (100, 100)\noffset_x = 150  # Change the x-coordinate to give more space\noffset_y = 150  # Change the y-coordinate to give more space\nwidth2 = 10\nheight2 = 10\n \nctx.lineWidth = 2\nctx.strokeStyle = \'red\'  # Color for the second square\nctx.beginPath()\nctx.rect(offset_x, offset_y, width2 * gs, height2 * gs)  # Draw another hollow square\nctx.stroke()\n \n# Function to draw a circle around a square\ndef draw_outer_circle(x, y, width, height):\n    # Calculate the radius of the outer circle (half of the diagonal of the square)\n    radius = window.Math.sqrt(width ** 2 + height ** 2) / 2\n    # Calculate the center of the square\n    center_x = x + width * gs / 2\n    center_y = y + height * gs / 2\n    # Draw the outer circle\n    ctx.beginPath()\n    ctx.arc(center_x, center_y, radius * gs, 0, 2 * window.Math.PI)\n    ctx.strokeStyle = \'black\'  # Color for the outer circle\n    ctx.lineWidth = 2\n    ctx.stroke()\n \n# Draw outer circles around both squares\ndraw_outer_circle(50, 50, width, height)  # For the first square\ndraw_outer_circle(offset_x, offset_y, width2, height2)  # For the second square\n \n# Create the context menu\ncontext_menu = html.DIV(style={"position": "absolute", "display": "none", "background-color": "#fff", "border": "1px solid #ccc", "padding": "5px"})\ncontext_menu <= html.BUTTON("Option 1: Clear Canvas")\ncontext_menu <= html.BUTTON("Option 2: Draw Circle")\nbrython_div <= context_menu\n \n# Function to show context menu\ndef show_context_menu(event):\n    event.preventDefault()  # Prevent the default right-click menu\n    context_menu.style.display = "block"  # Show custom context menu\n    context_menu.style.left = f"{event.pageX}px"  # Set the position of the menu\n    context_menu.style.top = f"{event.pageY}px"\n \n# Hide the context menu when clicking elsewhere\ndef hide_context_menu(event):\n    context_menu.style.display = "none"\n \n# Attach right-click (contextmenu) event to the canvas\ncanvas.bind("contextmenu", show_context_menu)\n \n# Attach click event to document to hide the menu when clicking elsewhere\ndocument.bind("click", hide_context_menu)\n \n# Function for the menu options\ndef clear_canvas(event):\n    ctx.clearRect(0, 0, canvas.width, canvas.height)  # Clear the canvas\n    context_menu.style.display = "none"  # Hide the context menu after action\n \ndef draw_circle(event):\n    ctx.beginPath()\n    ctx.arc(200, 200, 50, 0, 2 * window.Math.PI)  # Draw a circle at the center\n    ctx.strokeStyle = \'green\'\n    ctx.stroke()\n    context_menu.style.display = "none"  # Hide the context menu after action\n \n# Attach actions to context menu buttons\ncontext_menu.children[0].bind("click", clear_canvas)  # First button: Clear canvas\ncontext_menu.children[1].bind("click", draw_circle)  # Second button: Draw a circle \n', 'tags': '', 'url': 'w13.html'}, {'title': 'w12', 'text': '\n n=11 #總共的行數\nspace = \'_\'\ncenter = n//2\n#print(center)\n\nfor y in range(n):\n    for x in range(n):\n        print("(", x, ", ", y, ")", sep="")\n \n \n \n from browser import html\nfrom browser import document as doc\n \n# 利用 html 建立 canvas 超文件物件\ncanvas = html.CANVAS(width = 400, height = 400)\nbrython_div = doc["brython_div1"]\nbrython_div <= canvas\n \n# 每一格的 pixel 數\ngs = 20\n \n#gs*tc = canvas width and height\n \nctx = canvas.getContext("2d")\nwidth = 11\nheight = 11\n \n \nfor i in range(width):\n     for j in range(height):\n        #dRect(i*gs, j*gs, gs, gs, 1, "lightgrey")\n         ctx.lineWidth = 1\n         ctx.strokeStyle = \'red\'\n         ctx.beginPath();\n         ctx.rect(i*gs,j*gs,gs,gs)\n         ctx.stroke();\n \nfrom browser import html\nfrom browser import document as doc\n \n# 利用 html 建立 canvas 超文件物件\ncanvas = html.CANVAS(width = 400, height = 400)\nbrython_div = doc["brython_div1"]\nbrython_div <= canvas\n \n# 每一格的 pixel 數\ngs = 20\n \n#gs*tc = canvas width and height\n \nctx = canvas.getContext("2d")\nwidth = 11\nheight = 11\n \n \nfor i in range(width):\n     for j in range(height):\n        #dRect(i*gs, j*gs, gs, gs, 1, "lightgrey")\n         ctx.lineWidth = 1\n         ctx.strokeStyle = \'red\'\n         ctx.beginPath();\n         ctx.rect(i*gs,j*gs,gs,gs)\n         ctx.stroke();\n \n \n \n \n', 'tags': '', 'url': 'w12.html'}, {'title': 'w7-2', 'text': "今天我用chatgpt做高度5的金字塔 \n 這是我的程式: \n def print_star_pyramid(n):  # n 是金字塔的高度  for i in range(1, n + 1):  # 打印每一层前的空格  spaces = '\u3000' * (n - i)  # 打印每一层的星号部分  stars = '＊' * (2 * i - 1)  # 打印当前层  print(spaces + stars) \n # 调用函数，打印高度为 5 的星号金字塔 print_star_pyramid(5) \n \u3000\xa0 \xa0 \xa0 \xa0 ＊ \u3000\u3000\u3000＊＊＊ \u3000\u3000＊＊＊＊＊ \u3000＊＊＊＊＊＊＊ ＊＊＊＊＊＊＊＊＊ \n \n", 'tags': '', 'url': 'w7-2.html'}, {'title': 'w8', 'text': '\n', 'tags': '', 'url': 'w8.html'}, {'title': 'HW 4', 'text': '主題: 利用 Python 控制機電模擬系統 (20%) \n 利用\xa0 https://solvespace.com/ \xa0建立機械系統零組件 \n 利用  CoppeliaSim  建立機電模擬系統 \n 利用  Python  跨網路控制瀏覽器上的機電模擬系統 \n 範例: \n cd2023_pj3ag4_zmq_football_4.7.7z \n cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z \n 完成上述流程整理後, 請將 HW4 自評分數輸入 cp2024 自評表單中. \n', 'tags': '', 'url': 'HW 4.html'}, {'title': 'HW 4 Exam', 'text': '每六人為一組進行協同程式練習 \n 透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 4 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯. \n', 'tags': '', 'url': 'HW 4 Exam.html'}, {'title': 'Final Report', 'text': '期末口頭與書面專題報告 (20%) \n 期末口頭專題報告影片: \n ...... \n 期末書面專題報告檔案 (pdf): \n ...... \n 電腦輔助設計與實習課程總結心得: \n ...... \n 期末報告自評成績: \n 完成上述流程後, 請將 Final Report 自評分數輸入 cp2024 自評表單中. \n', 'tags': '', 'url': 'Final Report.html'}, {'title': 'Brython', 'text': '從 1 累加到 100: \n 1 add to 100 \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};